<?php
/* include file imports */
require_once('custom.user.inc');

/* webform intercept - mail to person on project contact
   volunteer form
   this is confusing but we drill down from the project url to load the
   project node and find the contact person.
*/
function custom_mail_alter(&$message) {
	// check for webform
	if ($message['id'] == 'webform_submission') {
		// check for node id 999 which is the volunteer form.
		if ($message['params']) {
			// search message body for url
			$msg_body = $message['params']['message'];
			$matches = array();
			// preg_match
			$has_match = preg_match("/This person has expressed interest in volunteering for\s*.*?:\s*(http.*?)\s/", $msg_body, $matches);
			if ($has_match && count($matches) == 2) {
				$url = $matches[1];
				$node_id = _custom_find_node_id_from_project_url($url);
				if ($node_id) {
					$project = node_load($node_id);
					$contact_email = $project->field_lead_contact_email[LANGUAGE_NONE][0]['value'];
					$contact_name = $project->field_lead_contact_person[LANGUAGE_NONE][0]['value'];
					$message['to'] .= ',' . $contact_email;
				}
			}
		}
	}
}
/**
 * Find node id from a given url and path
 * volunteer form
 */
function _custom_find_node_id_from_project_url($url) {
	global $base_url;
	$parsed = parse_url($url);
	if ($parsed && !empty($parsed['path'])) {
		// expecting path to start with a /
		$path = strpos($parsed['path'],'/') === 0 ? substr($parsed['path'],1) : $parsed['path'];
		$node_path = drupal_get_normal_path($path);
		$nid = str_replace('node/', '', $node_path);
		return $nid;
	}
	return false;
}

/* Drupal hooks for this module
* notifications
 */

function custom_node_presave($node) {
	switch ($node->type) {
		case 'project':
			# run the project node presave
			_custom_project_node_presave($node);
			break;			
	}
}

/* Project node type functions 
* notifications
*/
function _custom_project_node_presave($node) {
	if (empty($node->nid)) {
		# only run if this is a new node and has a neighborhood set
		$neighborhood_tid = 0;
		if (!empty($node->field_neighborhood)) {
			$neighborhood_tid = $node->field_neighborhood[LANGUAGE_NONE][0]['tid'];
		}
		$project_types = array();
		if (!empty($node->field_project_type)) { 
			foreach($node->field_project_type[LANGUAGE_NONE] as $delta=>$fld) {
				$project_types[] = $fld['tid'];			
			}
		}
		// query
		// users with field_project_notify_prefs
		// user is not $node->uid
	}
}

/* end project node type functions */